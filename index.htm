<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Invigilation Timer</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
            min-height: 100vh;
            position: relative;
            padding-bottom: 100px; /* Space for the start button */
        }

        #venue-container {
            text-align: center;
            margin-bottom: 20px;
        }

        #venue-display {
            font-size: 72px;
            font-weight: bold;
        }

        #setup-container {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        #timers-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 20px;
            margin-bottom: 80px; /* Space for start button */
        }

        .timer {
            background: white;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            flex: 1;
            min-width: 200px;
            text-align: center;
        }

        .timer h2 {
            margin: 0 0 10px 0;
            font-size: 18px;
        }

        .time-display {
            font-size: 120px;
            font-weight: bold;
            margin: 10px 0;
            font-family: monospace;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin: 5px;
        }

        button:hover {
            background-color: #45a049;
        }

        input {
            padding: 8px;
            margin: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .remove-timer {
            background-color: #f44336;
            padding: 5px 10px;
            font-size: 12px;
        }

        .remove-timer:hover {
            background-color: #da190b;
        }

        .warning {
            color: #f44336;
        }

        .finished {
            background-color: #ffebee;
        }

        #fullscreen-btn {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: #2196F3;
        }

        #fullscreen-btn:hover {
            background-color: #1976D2;
        }

        #start-all-container {
            position: fixed;
            bottom: 20px;
            left: 0;
            right: 0;
            text-align: center;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 10px;
            box-shadow: 0 -2px 10px rgba(0,0,0,0.1);
        }

        #start-all {
            background-color: #E91E63;
            font-size: 20px;
            padding: 15px 40px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            transition: transform 0.2s;
        }

        #start-all:hover {
            background-color: #D81B60;
            transform: scale(1.05);
        }

        #start-all:disabled {
            background-color: #ccc;
            cursor: not-allowed;
            transform: none;
        }
    </style>
</head>
<body>
    <div id="venue-container">
        <input type="text" id="venue-input" placeholder="Enter Venue">
        <button onclick="setVenue()">Set Venue</button>
        <div id="venue-display"></div>
    </div>

    <div id="setup-container">
        <input type="text" id="module-code" placeholder="Module Code">
        <input type="number" id="hours" placeholder="Hours" min="0">
        <input type="number" id="minutes" placeholder="Minutes" min="0">
        <button onclick="addTimer()">Add Timer</button>
    </div>

    <div id="timers-container"></div>

    <div id="start-all-container">
        <button onclick="startAllTimers()" id="start-all">START ALL TIMERS</button>
    </div>

    <button id="fullscreen-btn" onclick="toggleFullscreen()">Toggle Fullscreen</button>

    <script>
        let timers = [];
        let timerIntervals = [];
        let isRunning = false;

        function setVenue() {
            const venue = document.getElementById('venue-input').value;
            document.getElementById('venue-display').textContent = venue;
        }

        function addTimer() {
            const moduleCode = document.getElementById('module-code').value;
            const hours = parseInt(document.getElementById('hours').value) || 0;
            const minutes = parseInt(document.getElementById('minutes').value) || 0;

            if (!moduleCode) {
                alert('Please enter a module code');
                return;
            }

            if (hours === 0 && minutes === 0) {
                alert('Please enter a valid time');
                return;
            }

            const totalSeconds = (hours * 3600) + (minutes * 60);
            const timerId = Date.now();

            const timerDiv = document.createElement('div');
            timerDiv.className = 'timer';
            timerDiv.id = `timer-${timerId}`;
            timerDiv.innerHTML = `
                <h2>${moduleCode}</h2>
                <div class="time-display">
                    ${formatTime(totalSeconds)}
                </div>
                <button class="remove-timer" onclick="removeTimer(${timerId})">Remove</button>
            `;

            document.getElementById('timers-container').appendChild(timerDiv);

            timers.push({
                id: timerId,
                moduleCode: moduleCode,
                remainingTime: totalSeconds,
                originalTime: totalSeconds
            });

            // Clear input fields
            document.getElementById('module-code').value = '';
            document.getElementById('hours').value = '';
            document.getElementById('minutes').value = '';
        }

        function startAllTimers() {
            if (isRunning || timers.length === 0) return;
            isRunning = true;

            timers.forEach((timer, index) => {
                timerIntervals[index] = setInterval(() => {
                    updateTimer(timer);
                }, 1000);
            });

            document.getElementById('start-all').disabled = true;
        }

        function updateTimer(timer) {
            if (timer.remainingTime <= 0) {
                const timerElement = document.getElementById(`timer-${timer.id}`);
                timerElement.classList.add('finished');
                return;
            }

            timer.remainingTime--;
            const timerElement = document.getElementById(`timer-${timer.id}`);
            const timeDisplay = timerElement.querySelector('.time-display');
            timeDisplay.textContent = formatTime(timer.remainingTime);

            if (timer.remainingTime <= 300) { // 5 minutes warning
                timeDisplay.classList.add('warning');
            }
        }

        function removeTimer(timerId) {
            const index = timers.findIndex(t => t.id === timerId);
            if (index > -1) {
                clearInterval(timerIntervals[index]);
                timerIntervals.splice(index, 1);
                timers.splice(index, 1);
            }
            const timerElement = document.getElementById(`timer-${timerId}`);
            timerElement.remove();
        }

        function formatTime(seconds) {
            const hours = Math.floor(seconds / 3600);
            const minutes = Math.floor((seconds % 3600) / 60);
            const remainingSeconds = seconds % 60;
            return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}`;
        }

        function toggleFullscreen() {
            if (!document.fullscreenElement) {
                document.documentElement.requestFullscreen();
            } else {
                document.exitFullscreen();
            }
        }

        // Handle fullscreen change
        document.addEventListener('fullscreenchange', () => {
            const fullscreenBtn = document.getElementById('fullscreen-btn');
            fullscreenBtn.textContent = document.fullscreenElement ? 'Exit Fullscreen' : 'Toggle Fullscreen';
        });
    </script>
</body>
</html>
