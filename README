# 🕒 Invigilation Timer

A browser-based examination timing system built for invigilators handling multiple sessions simultaneously. Designed with a clean, responsive interface and strong accessibility support.

**Live Demo:**  
👉 [Try it here](https://eron-minsk.github.io/timer/)

---

## 🔧 Features

### 🕒 Multi-Timer Control
- Manage up to 10 independent exam sessions
- Individual start/pause/reset controls
- Global control panel for all timers
- Progress bars with visual alerts

### ⏱ Time Management
- Quick presets: 1h, 1.5h, 2h, 2.5h, 3h
- Add extra time (+1m / +5m) per timer or globally
- Pause/resume any timer
- Reset or remove timers as needed

### ⚙️ Configuration & Setup
- Save/load custom timer setups
- Custom venue name
- Module code input with validation
- Max duration: 24 hours per timer

### 🔔 Notifications
- Visual alerts when timers near completion
- Optional audio and desktop notifications
- Color-coded warning states

### ♿ Accessibility
- High contrast mode
- Color scheme optimized for visual impairments

### 🖥 Interface
- Fullscreen mode for clear visibility
- Responsive layout for all devices
- Minimalist, distraction-free UI
- Logical visual hierarchy for ease of use

---

## 🚀 Getting Started

1. **Set up your venue**
   - Enter venue name → click **Set Venue**
2. **Add exam timers**
   - Input module code and duration (or use a preset)
   - Click **Add Timer**
3. **Start the exam session**
   - Once all timers are ready → click **START ALL TIMERS**
   - Use individual or global controls as needed
4. **Manage ongoing sessions**
   - Pause, resume, add time, or reset as necessary
   - Remove timers when sessions conclude

---

## 🎨 Color Scheme

- **Primary:** Purple  
- **Accent:** Teal  
- **Neutral:** Grey  

**High Contrast Mode:**
- Green: `#00bf7d`  
- Bright Teal: `#00b4c5`  
- Blue: `#0073e6`  
- Royal Blue: `#2546f0`  
- Deep Purple: `#5928ed`

---

## ⚙️ Technical Overview

- Built with vanilla **HTML, CSS, and JavaScript**
- No external libraries or frameworks
- Configuration saved using `localStorage`
- Uses the **Web Notifications API** (optional)

---

## 🌐 Browser Support

- ✅ Chrome (recommended)  
- ✅ Firefox (recommended)  
- ✅ Edge  
- ✅ Safari

---

## 📦 Installation

1. Clone this repo
2. Open `index.htm` in any modern browser
3. Grant notification permissions when prompted (optional)

---

## 📄 License

MIT License
